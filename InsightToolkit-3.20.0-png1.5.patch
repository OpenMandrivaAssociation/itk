--- InsightToolkit-3.20.0/Code/IO/itkPNGImageIO.cxx.orig	2011-11-16 19:48:25.969766619 -0200
+++ InsightToolkit-3.20.0/Code/IO/itkPNGImageIO.cxx	2011-11-16 19:57:48.823976539 -0200
@@ -31,7 +31,7 @@ extern "C"
   void itkPNGWriteErrorFunction(png_structp png_ptr,
                                 png_const_charp itkNotUsed(error_msg))
     {
-    longjmp(png_ptr->jmpbuf, 1);
+      longjmp(png_jmpbuf(png_ptr), 1);
     }
 }
 
@@ -211,7 +211,7 @@ void PNGImageIO::Read(void* buffer)
   // minimum of a byte per pixel
   if (colorType == PNG_COLOR_TYPE_GRAY && bitDepth < 8) 
     {
-    png_set_gray_1_2_4_to_8(png_ptr);
+    png_set_expand_gray_1_2_4_to_8(png_ptr);
     }
 
   // add alpha if any alpha found
@@ -227,9 +227,12 @@ void PNGImageIO::Read(void* buffer)
 #endif
     }
 
-  if (info_ptr->valid & PNG_INFO_sBIT)
+  if (png_get_valid(png_ptr, info_ptr, PNG_INFO_sBIT))
     {
-    png_set_shift(png_ptr, &(info_ptr->sig_bit));
+     png_color_8p sig_bit;
+
+     if (png_get_sBIT(png_ptr, info_ptr, &sig_bit))
+       png_set_shift(png_ptr, sig_bit);
     }
   // have libpng handle interlacing
   //int number_of_passes = png_set_interlace_handling(png_ptr);
@@ -346,7 +349,7 @@ void PNGImageIO::ReadImageInformation()
   // minimum of a byte per pixel
   if (colorType == PNG_COLOR_TYPE_GRAY && bitDepth < 8) 
     {
-    png_set_gray_1_2_4_to_8(png_ptr);
+    png_set_expand_gray_1_2_4_to_8(png_ptr);
     }
 
   // add alpha if any alpha found
@@ -496,7 +499,7 @@ void PNGImageIO::WriteSlice(const std::s
 #if !defined(_MSC_VER) || _MSC_VER != 1310
   png_set_error_fn(png_ptr, png_ptr,
                    itkPNGWriteErrorFunction, itkPNGWriteWarningFunction);
-  if (setjmp(png_ptr->jmpbuf))
+  if (setjmp(png_jmpbuf(png_ptr)))
     {
     fclose(fp);
     itkExceptionMacro("Error while writing Slice to file: "
